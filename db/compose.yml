version: '3.8'

services:
  ### MongoDB ###
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./collections:/collections
    networks:
      - app-network
    environment:
      MONGO_INITDB_DATABASE: crimeLab

  ### Neo4j ###
  neo4j:
    image: neo4j:latest
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474" # Port d'administration web
      - "7687:7687" # Port Bolt pour les connexions depuis une application
    restart: always
    container_name: neo4j
    volumes:
      - ./logs:/logs
    networks:
      - app-network

  ### Zookeeper (Kafka Dependency) ###
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  ### Kafka ###
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - app-network

  ### Kafka UI (Optionnel - Pour visualiser Kafka) ###
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network

### RÃ©seau pour connecter les services ###
networks:
  app-network:
    driver: bridge

### Volumes persistants ###
volumes:
  mongo_data:
  logs:
